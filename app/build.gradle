apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'

android {
  compileSdkVersion compile_sdk_version
  buildToolsVersion build_version
  defaultConfig {
    applicationId "com.mina_mikhail.fixed_solutions_task"
    minSdkVersion min_sdk_version
    targetSdkVersion compile_sdk_version
    versionCode version_code
    versionName version_name
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor' // butterknife
  }
  dataBinding {
    enabled = true
  }
  lintOptions {
    checkReleaseBuilds false
    // Or, if you prefer, you can continue to check for errors in release builds,
    // but continue the build even when errors are found:
    abortOnError false
  }
}

repositories {
  maven { url "https://jitpack.io" }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')

  configurations {
    all*.exclude group: 'com.android.support', module: 'support-v13'
  }

  // Support
  implementation "androidx.appcompat:appcompat:$appcompat"
  implementation "androidx.legacy:legacy-support-v4:$support_version"

  // Arch Components
  implementation "androidx.lifecycle:lifecycle-extensions:$arch_comp_version"
  implementation "androidx.lifecycle:lifecycle-viewmodel:$arch_comp_version"
  annotationProcessor "androidx.lifecycle:lifecycle-compiler:$arch_comp_version"

  // Room Database
  implementation "androidx.room:room-runtime:$room"
  implementation "androidx.room:room-rxjava2:$room"
  annotationProcessor "androidx.room:room-compiler:$room"

  // Navigation Component
  implementation "androidx.navigation:navigation-fragment:$navigation"
  implementation "androidx.navigation:navigation-ui:$navigation"

  // Paging
  implementation "androidx.paging:paging-runtime:$paging"

  // RxJava & RxAndroid
  implementation "io.reactivex.rxjava2:rxjava:$rxjava"
  implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
  implementation "com.uber.autodispose:autodispose:$uber_autodispose"

  // Networking
  implementation "com.squareup.retrofit2:retrofit:$retrofit"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
  implementation "com.google.code.gson:gson:$gson"
  implementation "com.facebook.stetho:stetho:$stetho"
  implementation "com.facebook.stetho:stetho-okhttp3:$stetho"

  // UI
  implementation "com.google.android.material:material:$appcompat"
  implementation "androidx.cardview:cardview:$support_version"
  implementation "com.makeramen:roundedimageview:$rounded_image_view"
  implementation "com.irozon.sneaker:sneaker:$sneaker"
  implementation "com.github.ybq:Android-SpinKit:$loading_animations"
  implementation "com.github.chrisbanes:PhotoView:$photo_view"
  implementation "com.github.ome450901:SimpleRatingBar:$simple_rating_bar"

  // Gallery
  implementation("com.github.bumptech.glide:glide:$glide") {
    exclude group: "com.android.support"
  }
  annotationProcessor "com.github.bumptech.glide:compiler:$glide"
  implementation "com.github.bumptech.glide:okhttp3-integration:$glide"

  // Utils
  implementation "com.squareup.okhttp3:logging-interceptor:$interceptor"
  implementation "com.jakewharton:butterknife:$butterknife"
  annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"
  implementation "org.parceler:parceler-api:$parceler_api"
  annotationProcessor "org.parceler:parceler:$parceler_api"
  implementation "androidx.multidex:multidex:$multidex"

  // Dagger
  implementation "com.google.dagger:dagger:$dagger"
  implementation "com.google.dagger:dagger-android-support:$dagger_support"
  annotationProcessor "com.google.dagger:dagger-compiler:$dagger"

  annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_processor"

  // Testing
  testImplementation "junit:junit:$junit"
  androidTestImplementation "androidx.test.ext:junit:$junit_ext"
  androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
  androidTestImplementation "androidx.arch.core:core-testing:$core_testing"
  androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger"
  testAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger"
  testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

// Logger out test results to console
tasks.matching { it instanceof Test }.all {
  testLogging.events = ["failed", "passed", "skipped"]
}